# vi: ft=i3config

set $mod Mod1
set $dotfiles_path $HOME/dotfiles

font pango:Ubuntu 11

set $gaps_outer 10
set $gaps_inner 15

smart_gaps on
for_window [class="^.*"] border pixel 0
gaps outer $gaps_outer
gaps inner $gaps_inner
hide_edge_borders both

# class                 border  backgr. text    indicator child_border
client.focused          #002b36 #002b36 #dfdfdf #2e9ef4   #285577
client.focused_inactive #002b36 #002b36 #dfdfdf #484e50   #5f676a
client.unfocused        #073642 #073642 #888888 #292d2e   #222222
client.urgent           #2f343a #900000 #ffffff #900000   #900000
client.placeholder      #000000 #0c0c0c #ffffff #000000   #0c0c0c
client.background       #ffffff

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# Use pactl to adjust volume in PulseAudio.
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume $(pactl list | awk -v RS= "/RUNNING/" | sed -nr "s/Sink #([0-9]*)/\1/p") +10%
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume $(pactl list | awk -v RS= "/RUNNING/" | sed -nr "s/Sink #([0-9]*)/\1/p") -10%
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute $(pactl list | awk -v RS= "/RUNNING/" | sed -nr "s/Sink #([0-9]*)/\1/p") toggle
bindsym XF86AudioPlay exec --no-startup-id "playerctl --player=playerctld play-pause && notify-send 'play/pause'"
bindsym XF86AudioPrev exec --no-startup-id "playerctl previous && notify-send 'previous'"
bindsym XF86AudioNext exec --no-startup-id "playerctl next && notify-send 'next'"

bindsym XF86MonBrightnessDown exec --no-startup-id "light -U 10"
bindsym XF86MonBrightnessUp exec --no-startup-id "light -A 10"

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec kitty

# kill focused window
bindsym $mod+Shift+q kill

# start rofi (a program launcher)
bindsym $mod+d exec rofi -show drun
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+b split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
# bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Clicking same workspace will toggle
workspace_auto_back_and_forth yes
bindsym $mod+Tab workspace back_and_forth

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"
set $ws11 "11"
set $ws12 "12"
set $ws13 "13"
set $ws14 "14"
set $ws15 "15"
set $ws16 "16"
set $ws17 "17"
set $ws18 "18"
set $ws19 "19"
set $ws20 "20"
set $wsminus "todo"
set $wsplus "control"

# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9
bindsym $mod+0 workspace $ws10
bindsym $mod+Control+1 workspace $ws11
bindsym $mod+Control+2 workspace $ws12
bindsym $mod+Control+3 workspace $ws13
bindsym $mod+Control+4 workspace $ws14
bindsym $mod+Control+5 workspace $ws15
bindsym $mod+Control+6 workspace $ws16
bindsym $mod+Control+7 workspace $ws17
bindsym $mod+Control+8 workspace $ws18
bindsym $mod+Control+9 workspace $ws19
bindsym $mod+Control+0 workspace $ws20
bindsym $mod+minus workspace $wsminus
bindsym $mod+plus workspace $wsplus

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9
bindsym $mod+Shift+0 move container to workspace $ws10
bindsym $mod+Shift+Control+1 move container to workspace $ws11
bindsym $mod+Shift+Control+2 move container to workspace $ws12
bindsym $mod+Shift+Control+3 move container to workspace $ws13
bindsym $mod+Shift+Control+4 move container to workspace $ws14
bindsym $mod+Shift+Control+5 move container to workspace $ws15
bindsym $mod+Shift+Control+6 move container to workspace $ws16
bindsym $mod+Shift+Control+7 move container to workspace $ws17
bindsym $mod+Shift+Control+8 move container to workspace $ws18
bindsym $mod+Shift+Control+9 move container to workspace $ws19
bindsym $mod+Shift+Control+0 move container to workspace $ws20
bindsym $mod+Shift+minus move container to workspace $wsminus
bindsym $mod+Shift+plus move container to workspace $wsplus

# reload the configuration file
# bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 10 px or 10 ppt
        bindsym j resize grow height 10 px or 10 ppt
        bindsym k resize shrink height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

bindsym Control+Shift+F5 exec --no-startup-id maim -s $HOME/screenshots/$(date +%Y-%m-%d_%T).png
bindsym Control+F5 exec --no-startup-id maim $HOME/screenshots/$(date +%Y-%m-%d_%T).png

bindsym $mod+c exec google-chrome-stable
bindsym $mod+Shift+c exec google-chrome-stable --profile-directory="Profile 1"
bindsym $mod+s exec spotify
bindsym $mod+Shift+d exec notify-send "toggling dunst" && notify-send "DUNST_COMMAND_TOGGLE"
bindsym $mod+grave exec notify-send "timer for 20 minutes" && sleep 5s && notify-send "DUNST_COMMAND_PAUSE" && sleep 20m && notify-send "DUNST_COMMAND_RESUME" && notify-send "time up"
bindsym $mod+Delete exec touch ~/local
bindsym $mod+Shift+Delete exec rm ~/local
# bindsym $mod+backslash exec xmodmap ~/.xmodmap_original

exec_always --no-startup-id $HOME/.config/polybar/launch.sh
exec_always --no-startup-id feh --bg-fill $dotfiles_path/backgrounds/current.png
exec_always --no-startup-id pkill -9 picom; picom --backend glx --vsync --inactive-dim=0.08 --inactive-dim-fixed --xrender-sync-fence --glx-no-stencil --glx-no-rebind-pixmap --use-damage
exec_always --no-startup-id xmodmap ~/.xmodmap_original && xmodmap ~/.xmodmap
